
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  files     File[]  
  folders   Folder[] 
  permissions Permission[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model File {
  id        Int      @id @default(autoincrement())
  filename  String
  filepath  String  
  isPublic  Boolean  @default(false)
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  folder    Folder  @relation(fields: [folderId], references: [id])
  folderId  Int
  permissions Permission[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  folderpath  String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  parent    Folder?  @relation("ParentFolder", fields: [parentFolderId], references: [id])
  parentFolderId Int?
  children  Folder[] @relation("ParentFolder")
  files     File[]   
  permissions Permission[]  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  file      File?    @relation(fields: [fileId], references: [id])
  fileId    Int?
  folder    Folder?  @relation(fields: [folderId], references: [id])
  folderId  Int?
  canEdit   Boolean  @default(false) 
  canView   Boolean  @default(true) 
  @@unique([fileId, userId])
  @@unique([folderId, userId])
}